# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:
  push:
    branches: [ "make-vertx-redisques-build-pass-on-github-actions" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build_maven:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: 4

      - name: Build with Maven
        run: mvn install -Dmaven.javadoc.skip=true -B -V

  release:
    needs: build_maven
    if: github.ref_name == 'make-vertx-redisques-build-pass-on-github-actions' && !github.ref_protected && github.repository == 'gedestroy/vertx-redisques'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: 4

      - name: release
        env:
          CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
          CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
          CI_PGP_PASSWORD: ${{ secrets.CI_PGP_PASSWORD }}
          MAVEN_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.CI_DEPLOY_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.CI_PGP_PASSWORD }}
        run: |
          curl -s get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install groovy 3.0.8

          chmod +x .github/maybe-release-github.sh
          .github/maybe-release-github.sh
#          groovy staging.groovy drop
#          OUTPUT=$(groovy staging.groovy start)
#          echo "repository Id: $OUTPUT"
#
#          git pull
#          mvn -B -Prelease jgitflow:release-start jgitflow:release-finish --settings settings.xml -DrepositoryId=${OUTPUT}
#
#          groovy staging.groovy close ${OUTPUT}
#          groovy staging.groovy promote ${OUTPUT}

#      - name: Update tag
#        run: |
#          git tag
#          git push --tags
#          git checkout develop
#          git push origin develop

  after_release:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Run after release
        run: bash <(curl -s https://codecov.io/bash)